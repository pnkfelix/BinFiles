# -*- mode: sh; indent-tabs-mode: nil -*-

DIR=$(basename $(pwd))
echo "DIR: $DIR"

. ~/ConfigFiles/Bash/search_for_repo.sh

ROOT=.
if ! search_parents_for_dotgit ; then
    ROOT=$(dirname $last_git_path);
else
    echo "search failed";
    exit 244;
fi
echo "ROOT: $ROOT"


if [[ "$DIR" == *"dbg"* ]]; then
    PREFIX_DBG="-dbg"
    OPT_DBG="--enable-debug"
else
    PREFIX_DBG=""
    OPT_DBG="--disable-debug"
fi

if [[ "$DIR" == *"opt"* ]]; then
    PREFIX_OPT=""
    OPT_OPT="--enable-optimize"
else
    PREFIX_OPT="-nopt"
    OPT_OPT="--disable-optimize"
fi


## Cribbed from the platform detection in `configure`,

CFG_OSTYPE=$(uname -s)

# The goal here is to come up with the same triple as LLVM would,
# at least for the subset of platforms we're willing to target.

case $CFG_OSTYPE in

    Linux)
        CFG_OSTYPE=unknown-linux-gnu
        ;;

    FreeBSD)
        CFG_OSTYPE=unknown-freebsd
        ;;

    Darwin)
        CFG_OSTYPE=apple-darwin
        ;;

    MINGW32*)
        CFG_OSTYPE=pc-mingw32
        ;;
# Thad's Cygwin identifers below

#   Vista 32 bit
    CYGWIN_NT-6.0)
        CFG_OSTYPE=pc-mingw32
        ;;

#   Vista 64 bit
    CYGWIN_NT-6.0-WOW64)
        CFG_OSTYPE=w64-mingw32
        ;;

#   Win 7 32 bit
    CYGWIN_NT-6.1)
        CFG_OSTYPE=pc-mingw32
        ;;

#   Win 7 64 bit
    CYGWIN_NT-6.1-WOW64)
        CFG_OSTYPE=w64-mingw32
        ;;

# We do not detect other OS such as XP/2003 using 64 bit using uname.
# If we want to in the future, we will need to use Cygwin - Chuck's csih helper in /usr/lib/csih/winProductName.exe or alternative.
    *)
        err "unknown OS type: $CFG_OSTYPE"
        ;;
esac
    
if [[ "$DIR" == *"x32"* ]]; then
    PREFIX_X32="-x32"
    X32_OPT="--target=i686-$CFG_OSTYPE"
else
    X32_OPT=""
fi

if [[ "$DIR" == *"droid"* ]]; then
    PREFIX_DROID="-droid"
    DROID_OPT="--target=arm-linux-androideabi --android-cross-path=$HOME/opt/ndk_standalone"
else
    PREFIX_DROID=""
    DROID_OPT=""
fi


RELEASECHANNEL_OPT=
case $DIR in
    *dev)
        RELEASECHANNEL_OPT="--release-channel=dev"
        ;;
    *nightly)
        RELEASECHANNEL_OPT="--release-channel=nightly"
        ;;
    *beta)
        RELEASECHANNEL_OPT="--release-channel=beta"
        ;;
    *stable)
        RELEASECHANNEL_OPT="--release-channel=stable"
        ;;
esac

UNAME=$(uname)
# if [[ "$UNAME" == "Linux" ]] ; then
#     CLANG_OPT=""
# else
#     CLANG_OPT="--enable-clang"
# fi

# Some defaults suggested by alexcrichton for speeding up my
# development times (but trying to keep the generated configure
# invocation human-readable).
TESTSOPT_OPT=--disable-optimize-tests
LLVMASSERTS_OPT=--disable-llvm-assertions
for o in $*; do
    if [[ "$o" == *"--enable-optimize-tests"* ]]; then
        TESTSOPT_OPT=
    fi

    if [[ "$o" == *"--enable-llvm-assertions"* ]]; then
        LLVMASSERTS_OPT=
    fi
done


CONF_CMD=$ROOT/configure

OPTS_USUAL=" --enable-ccache $CLANG_OPT --prefix=~/opt/rust$PREFIX_DBG$PREFIX_OPT$PREFIX_X32$PREFIX_DROID $TESTSOPT_OPT $LLVMASSERTS_OPT"

ALL_OPTS="$OPT_DBG $OPT_OPT $DROID_OPT $X32_OPT $RELEASECHANNEL_OPT $OPTS_USUAL $*"

echo "CMD: $CONF_CMD $ALL_OPTS"

# CC=clang CXX=clang++
         "$CONF_CMD" $ALL_OPTS
